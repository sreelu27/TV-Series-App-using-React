{"ast":null,"code":"var _jsxFileName = \"/Users/sgeetha2/Documents/sree/React/tv-series-app/src/containers/SingleSeries/index.js\";\nimport React, { Component } from 'react';\nimport Loader from '../../components/Loader';\nimport { Link } from \"react-router-dom\";\n\nclass SingleSeries extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: null\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    fetch(`http://api.tvmaze.com/shows/${id}?embed=episodes`).then(response => response.json()).then(json => this.setState({\n      show: json\n    }));\n  }\n\n  render() {\n    const show = this.state.show;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, show === null && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), show !== null && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#0454f5\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Name -\"), show.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#0454f5\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Rating -\"), show.rating.average), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#0454f5\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Premiered -\"), show.premiered), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"#0454f5\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Number of Episodes -\"), show._embedded.episodes.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Show\",\n      src: show.image.medium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/`,\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Back to Search\"))));\n  }\n\n}\n\nexport default SingleSeries;","map":{"version":3,"sources":["/Users/sgeetha2/Documents/sree/React/tv-series-app/src/containers/SingleSeries/index.js"],"names":["React","Component","Loader","Link","SingleSeries","state","show","componentDidMount","id","props","match","params","fetch","then","response","json","setState","render","color","fontWeight","name","rating","average","premiered","_embedded","episodes","length","image","medium"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCI,KADiC,GAC1B;AACHC,MAAAA,IAAI,EAAC;AADF,KAD0B;AAAA;;AAIjCC,EAAAA,iBAAiB,GAAE;AAAA,UAERC,EAFQ,GAEF,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAFf,CAERH,EAFQ;AAGfI,IAAAA,KAAK,CAAE,+BAA8BJ,EAAG,iBAAnC,CAAL,CACCK,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAACS;AAAN,KAAd,CAFd;AAGH;;AACDE,EAAAA,MAAM,GAAE;AAAA,UACGX,IADH,GACW,KAAKD,KADhB,CACGC,IADH;AAGJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IAAI,KAAK,IAAT,IAAiB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtB,EAGQA,IAAI,KAAK,IAAT,IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAIKb,IAAI,CAACc,IAJV,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAIKb,IAAI,CAACe,MAAL,CAAYC,OAJjB,CAPJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAIKb,IAAI,CAACiB,SAJV,CAbJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADA,EAIKb,IAAI,CAACkB,SAAL,CAAeC,QAAf,CAAwBC,MAJ7B,CAnBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,MAAT;AAAgB,MAAA,GAAG,EAAEpB,IAAI,CAACqB,KAAL,CAAWC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAzBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAX;AAAe,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CA5BJ,CALR,CADJ;AA4CH;;AA1DgC;;AA6DrC,eAAed,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport Loader from '../../components/Loader';\nimport { Link } from \"react-router-dom\";\n\nclass SingleSeries extends Component {\n    state ={\n        show:null\n    }\n    componentDidMount(){\n\n        const {id} = this.props.match.params;\n        fetch(`http://api.tvmaze.com/shows/${id}?embed=episodes`)\n        .then((response) => response.json())\n        .then(json => this.setState({show:json}));\n    }\n    render(){\n        const {show} = this.state;\n\n        return (\n            <div>\n                {show === null && <Loader/>}\n                {\n                    show !== null \n                    &&\n                    <div>\n                        <p>\n                        <span style={{ color: \"#0454f5\", fontWeight: \"bold\" }}>\n                            Name -\n                        </span>\n                            {show.name}\n                        </p>\n                        <p>\n                        <span style={{ color: \"#0454f5\", fontWeight: \"bold\" }}>\n                            Rating -\n                        </span>\n                            {show.rating.average}\n                        </p>\n                        <p>\n                        <span style={{ color: \"#0454f5\", fontWeight: \"bold\" }}>\n                            Premiered -\n                        </span>\n                            {show.premiered}\n                        </p>\n                        <p>\n                        <span style={{ color: \"#0454f5\", fontWeight: \"bold\" }}>\n                            Number of Episodes -\n                        </span>\n                            {show._embedded.episodes.length}\n                        </p>\n                        <p>\n                            <img alt=\"Show\" src={show.image.medium} />\n                        </p>\n                        <button>\n                            <Link to={`/`} style={{ color: \"blue\" }}>\n                                Back to Search\n                            </Link>\n                        </button>\n                    </div>\n                    \n                }\n            </div>\n        )\n    }\n}\n\nexport default SingleSeries;"]},"metadata":{},"sourceType":"module"}